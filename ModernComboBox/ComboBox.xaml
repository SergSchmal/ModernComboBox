<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="ClickMode" Value="Press" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <Border
                            x:Name="InnerBorder"
                            Width="32"
                            MinWidth="{Binding ActualWidth, ElementName=toggleButton}"
                            Margin="2"
                            MinHeight="{Binding ActualHeight, ElementName=stackPanel}"
                            HorizontalAlignment="Right"
                            BorderBrush="Transparent"
                            SnapsToDevicePixels="true">
                            <StackPanel x:Name="stackPanel">
                                <Grid>
                                    <Ellipse
                                        x:Name="ellipse"
                                        Width="40"
                                        Height="40"
                                        Margin="2"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Fill="Transparent"
                                        Stroke="Black" />
                                    <Path
                                        x:Name="path"
                                        Width="24"
                                        Height="24"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Stroke="Black" Stretch="Fill">
                                        <Path.Data>
                                            <PathGeometry Figures="M 0.482 4 c -0.28 0 -0.51 0.23 -0.51 0.51 v 6.277 a 0.17 0.17 0 0 0 0.01 0.117 c 0.048 0.23 0.255 0.41 0.5 0.41 h 6.632 a 0.51 0.51 0 0 0 0.5 -0.437 c 0 -0.01 0.004 -0.02 0.005 -0.032 v -0.01 l 0.004 -0.027 v -0.005 l 0.845 -4.56 l 0.005 -0.016 V 6.21 c 0 -0.28 -0.23 -0.51 -0.51 -0.51 v -0.51 c 0 -0.28 -0.23 -0.51 -0.51 -0.51 H 3.037 h -0.005 a 0.347 0.347 0 0 1 -0.048 -0.048 c -0.042 -0.047 -0.09 -0.127 -0.144 -0.212 a 1.9 1.9 0 0 0 -0.18 -0.255 C 2.59 4.085 2.493 4 2.353 4 Z m 0 0.34 h 1.87 c -0.01 0 0.012 0 0.053 0.048 c 0.042 0.048 0.09 0.128 0.144 0.213 c 0.052 0.086 0.11 0.176 0.18 0.256 c 0.07 0.08 0.163 0.164 0.303 0.164 h 4.42 c 0.097 0 0.17 0.075 0.17 0.17 v 0.51 h -6.29 a 0.508 0.508 0 0 0 -0.5 0.48 H 0.826 l -0.005 0.03 l -0.51 2.754 V 4.51 c 0 -0.095 0.074 -0.17 0.17 -0.17 Z m 0.85 1.7 h 6.632 c 0.096 0 0.17 0.075 0.17 0.17 L 7.3 10.724 l -0.005 0.01 a 0.2 0.2 0 0 0 -0.006 0.022 a 0.2 0.2 0 0 0 -0.006 0.02 v 0.017 a 0.17 0.17 0 0 0 -0.005 0.026 c -0.002 0.006 0 0.01 0 0.016 c -0.002 0.008 -0.002 0.014 0 0.022 a 0.17 0.17 0 0 1 -0.166 0.117 H 0.482 a 0.168 0.168 0 0 1 -0.17 -0.17 l 0.845 -4.56 l 0.005 -0.016 V 6.21 c 0 -0.095 0.074 -0.17 0.17 -0.17 Z" />
                                        </Path.Data>
                                    </Path>
                                </Grid>
                                <TextBlock
                                    x:Name="toggleButton"
                                    Padding="2,0,2,0"
                                    HorizontalAlignment="Center"
                                    FontFamily="{Binding FontFamily, RelativeSource={RelativeSource TemplatedParent}}"
                                    FontSize="{Binding FontSize, RelativeSource={RelativeSource TemplatedParent}}"
                                    Foreground="Black"
                                    Text="{Binding Tag, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" />
                            </StackPanel>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ellipse" Property="Fill" Value="#FF8D8D8D" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="ellipse" Property="Fill" Value="Black" />
                            <Setter TargetName="path" Property="Stroke" Value="White" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ComboBox}">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="Padding" Value="6,3,5,3" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                        <Popup
                            x:Name="PART_Popup"
                            Width="{Binding ActualWidth, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                            Margin="1"
                            AllowsTransparency="true"
                            IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                            Placement="Bottom"
                            PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                            <Border
                                x:Name="dropDownBorder"
                                Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"
                                BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"
                                BorderThickness="1">
                                <ScrollViewer x:Name="DropDownScrollViewer">
                                    <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                        <Canvas
                                            x:Name="canvas"
                                            Width="0"
                                            Height="0"
                                            HorizontalAlignment="Left"
                                            VerticalAlignment="Top">
                                            <Rectangle
                                                x:Name="opaqueRect"
                                                Width="{Binding ActualWidth, ElementName=dropDownBorder}"
                                                Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                                Fill="{Binding Background, ElementName=dropDownBorder}" />
                                        </Canvas>
                                        <ItemsPresenter
                                            x:Name="ItemsPresenter"
                                            KeyboardNavigation.DirectionalNavigation="Contained"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </Grid>
                                </ScrollViewer>
                            </Border>
                        </Popup>
                        <ToggleButton
                            x:Name="toggleButton"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Foreground="{TemplateBinding Foreground}"
                            IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                            Style="{StaticResource ComboBoxToggleButton}" />
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Content="{TemplateBinding SelectionBoxItem}"
                            ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            IsHitTestVisible="false"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="dropDownBorder" Property="Height" Value="95" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="#101010" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsGrouping" Value="true" />
                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </MultiTrigger>
                        <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
                            <Setter TargetName="opaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                            <Setter TargetName="opaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ComboBoxItem">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ComboBoxItem">
                                <Border
                                    Margin="2"
                                    Background="{TemplateBinding Background}"
                                    BorderThickness="0">
                                    <TextBlock Margin="2" Text="{TemplateBinding Content}" />
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="#5000FF" />
                            <Setter Property="Foreground" Value="White" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#7EDCFC" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>